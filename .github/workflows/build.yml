on:
  workflow_call:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.6.0

      - name: Setup node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.14.0

      - name: Cache bigger downloads
        uses: actions/cache@v3.3.1
        id: cache
        with:
          path: ${{ github.workspace }}/.cache
          key: ${{ runner.os }}-${{ hashFiles('package.json', 'package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('package.json', 'package-lock.json') }}
            ${{ runner.os }}-

      # Separate cache for build dir, we reuse it in release publish workflow
      - name: Cache build output
        uses: actions/cache@v3.3.1
        id: build-cache
        with:
          path: build
          # Build hash should be based on runner.os, src files, and dependencies used.
          key: ${{ runner.os }}-build-${{ hashFiles('package.json', 'package-lock.json', 'public', 'src/**', '*.js', '*.ts') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('package.json', 'package-lock.json', 'public', 'src/**', '*.js', '*.ts') }}

      - name: Install dependencies
        # We only need to install deps if build isn't cached.
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit --progress=false --cache ${{ github.workspace }}/.cache/npm

      - name: Confirm build works
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: npm run build

      # Persist produced build dir:
      # - this is not for releases, but for quick testing during the dev
      # - action artifacts can be downloaded for 90 days, then are removed by github
      - name: Attach produced build to Github Action
        uses: actions/upload-artifact@v3
        with:
          name: ipfs-webui_${{ github.sha }}-${{ runner.os }}-build
          path: build
          if-no-files-found: error
